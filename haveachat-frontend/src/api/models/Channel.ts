/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Channel
 */
export interface Channel {
    /**
     * 
     * @type {number}
     * @memberof Channel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    type?: ChannelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof Channel
     */
    createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Channel
     */
    creatorId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Channel
     */
    privateChannel?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Channel
     */
    golfCourseId?: number;
}


/**
 * @export
 */
export const ChannelTypeEnum = {
    Dm: 'DM',
    Group: 'GROUP',
    Course: 'COURSE'
} as const;
export type ChannelTypeEnum = typeof ChannelTypeEnum[keyof typeof ChannelTypeEnum];


/**
 * Check if a given object implements the Channel interface.
 */
export function instanceOfChannel(value: object): value is Channel {
    return true;
}

export function ChannelFromJSON(json: any): Channel {
    return ChannelFromJSONTyped(json, false);
}

export function ChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Channel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'creatorId': json['creatorId'] == null ? undefined : json['creatorId'],
        'privateChannel': json['privateChannel'] == null ? undefined : json['privateChannel'],
        'golfCourseId': json['golfCourseId'] == null ? undefined : json['golfCourseId'],
    };
}

export function ChannelToJSON(json: any): Channel {
    return ChannelToJSONTyped(json, false);
}

export function ChannelToJSONTyped(value?: Channel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'name': value['name'],
        'description': value['description'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'creatorId': value['creatorId'],
        'privateChannel': value['privateChannel'],
        'golfCourseId': value['golfCourseId'],
    };
}

