/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GolfCourse,
} from '../models/index';
import {
    GolfCourseFromJSON,
    GolfCourseToJSON,
} from '../models/index';

export interface CreateRequest {
    golfCourse: GolfCourse;
}

export interface GetByIdRequest {
    id: number;
}

export interface GetNearbyCoursesRequest {
    lat: number;
    lng: number;
    radius?: number;
}

/**
 * 
 */
export class GolfCourseControllerApi extends runtime.BaseAPI {

    /**
     */
    async createRaw(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GolfCourse>> {
        if (requestParameters['golfCourse'] == null) {
            throw new runtime.RequiredError(
                'golfCourse',
                'Required parameter "golfCourse" was null or undefined when calling create().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/courses`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GolfCourseToJSON(requestParameters['golfCourse']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GolfCourseFromJSON(jsonValue));
    }

    /**
     */
    async create(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GolfCourse> {
        const response = await this.createRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getByIdRaw(requestParameters: GetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GolfCourse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/courses/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GolfCourseFromJSON(jsonValue));
    }

    /**
     */
    async getById(requestParameters: GetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GolfCourse> {
        const response = await this.getByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getNearbyCoursesRaw(requestParameters: GetNearbyCoursesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GolfCourse>>> {
        if (requestParameters['lat'] == null) {
            throw new runtime.RequiredError(
                'lat',
                'Required parameter "lat" was null or undefined when calling getNearbyCourses().'
            );
        }

        if (requestParameters['lng'] == null) {
            throw new runtime.RequiredError(
                'lng',
                'Required parameter "lng" was null or undefined when calling getNearbyCourses().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['lat'] != null) {
            queryParameters['lat'] = requestParameters['lat'];
        }

        if (requestParameters['lng'] != null) {
            queryParameters['lng'] = requestParameters['lng'];
        }

        if (requestParameters['radius'] != null) {
            queryParameters['radius'] = requestParameters['radius'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/courses/nearby`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GolfCourseFromJSON));
    }

    /**
     */
    async getNearbyCourses(requestParameters: GetNearbyCoursesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GolfCourse>> {
        const response = await this.getNearbyCoursesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
