/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CheckIn,
  CheckInRequest,
  User,
} from '../models/index';
import {
    CheckInFromJSON,
    CheckInToJSON,
    CheckInRequestFromJSON,
    CheckInRequestToJSON,
    UserFromJSON,
    UserToJSON,
} from '../models/index';

export interface Create1Request {
    user: User;
    checkInRequest: CheckInRequest;
}

export interface GetActiveForCourseRequest {
    courseId: number;
}

/**
 * 
 */
export class CheckInControllerApi extends runtime.BaseAPI {

    /**
     */
    async create1Raw(requestParameters: Create1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckIn>> {
        if (requestParameters['user'] == null) {
            throw new runtime.RequiredError(
                'user',
                'Required parameter "user" was null or undefined when calling create1().'
            );
        }

        if (requestParameters['checkInRequest'] == null) {
            throw new runtime.RequiredError(
                'checkInRequest',
                'Required parameter "checkInRequest" was null or undefined when calling create1().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['user'] != null) {
            queryParameters['user'] = requestParameters['user'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/checkins`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CheckInRequestToJSON(requestParameters['checkInRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CheckInFromJSON(jsonValue));
    }

    /**
     */
    async create1(requestParameters: Create1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckIn> {
        const response = await this.create1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getActiveForCourseRaw(requestParameters: GetActiveForCourseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CheckIn>>> {
        if (requestParameters['courseId'] == null) {
            throw new runtime.RequiredError(
                'courseId',
                'Required parameter "courseId" was null or undefined when calling getActiveForCourse().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/checkins/course/{courseId}`.replace(`{${"courseId"}}`, encodeURIComponent(String(requestParameters['courseId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CheckInFromJSON));
    }

    /**
     */
    async getActiveForCourse(requestParameters: GetActiveForCourseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CheckIn>> {
        const response = await this.getActiveForCourseRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
